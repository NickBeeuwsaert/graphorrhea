openapi: "3.0.1"
servers:
  - url: /api/v1
info:
  title: Notes API
  version: "1"
paths:
  /auth/login:
    summary: Get a access token and refresh token
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "A token pair to use to access the API"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPair"
  /auth/renew:
    summary: |
      Take a valid refresh token, and return a new token pair
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [refresh_token]
              properties:
                refresh_token:
                  type: string
      responses:
        200:
          description: "A new token pair."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPair"
  /notebook:
    summary: Get a notebook's contents
    parameters:
      - in: query
        name: path
        examples:
          rootPath:
            value: "/"
            summary: "Root notebook"
          nestedPath:
            value: "/notebook"
            summary: "Notebook in root"
        schema:
          $ref: "#/components/schemas/NotebookPath"
    get:
      responses:
        200:
          description: List of notebook contents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotebookItem"
              example:
                - type: "notebook"
                  name: "my_notebook"
                - type: "note"
                  name: "some_note"
  /note:
    summary: get a note
    parameters:
      - in: query
        name: path
        examples:
          rootNote:
            value: "/root.rst"
          subnotebookNote:
            value: "/someNotebook/note.rst"
        schema:
          $ref: "#/components/schemas/NotebookPath"
    get:
      responses:
        200:
          description: The requested note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ["content"]
              properties:
                content:
                  type: string
      responses:
        200:
          description: Create or update a note
          content:
            application/json:
              schema:
                type: object

components:
  schemas:
    TokenPair:
      type: object
      required: [access_token, refresh_token]
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
    NotebookItem:
      type: object
      required: [type, name]
      properties:
        type:
          type: string
          enum: ["notebook", "note"]
        name:
          type: string
    NotebookPath:
      type: string
      pattern: '^\/([a-z0-9 ]+\/?)*$'
    Note:
      type: object
      required: [content, type, owner]
      properties:
        owner:
          type: string
        type:
          type: string
          enum:
            - text/x-rst
            - text/markdown
        content:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        exception:
          type: string
        message:
          type: string
        field:
          type: string
  responses:
    ValidationError:
      description: OpenAPI request/response validation failed
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Error"
